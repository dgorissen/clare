# Steps needeed to setup a fresh RPi4 ready to run the clare container

Using the screen configurator rotate screen by 90 degrees

In raspi-config enable:
  serial, i2c, camera, vnc, spi
  opengl: "7. Advanced Options" – "A8 GL Driver" – "G2 GL (Fake KMS)"
  set hostname to clare

# Increase swap to 2GB by changing the file below to CONF_SWAPSIZE=2048:
sudo vi /etc/dphys-swapfile
sudo /etc/init.d/dphys-swapfile restart swapon -s

# free up some space
sudo apt-get purge wolfram-engine
sudo apt-get purge libreoffice
sudo apt-get clean
sudo apt-get autoremove

# install updates
sudo apt-get update && sudo apt-get upgrade

# setup git
git config --global user.email "dgorissen@gmail.com"
git config --global user.name "Dirk Gorissen"

# get some std packages
sudo apt install -y vim keychain imagemagick feh screen software-properties-common \
                    dos2unix x11-apps libinput-tools

# install docker
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
sudo usermod -aG docker dgorissen

# set permissions
sudo usermod -a -G dialout dgorissen
sudo usermod -a -G audio dgorissen
sudo usermod -a -G video dgorissen
sudo usermod -a -G i2c dgorissen
sudo usermod -a -G gpio dgorissen
sudo usermod -a -G input dgorissen
sudo usermod -a -G spi dgorissen

# add this to bashrc
eval $(keychain --noask --eval id_rsa)

# Setup piwatcher (https://www.omzlo.com/articles/the-piwatcher)
wget -N http://omzlo.com/downloads/piwatcher
chmod a+x piwatcher
sudo mv piwatcher /usr/local/bin/

cat > /home/dgorissen/piwatcher.sh << EOL
#!/bin/bash
/usr/local/bin/piwatcher watch 30
while true;
do
    /usr/local/bin/piwatcher status >> /dev/null
    sleep 15
done
EOL

chmod a+x /home/dgorissen/piwatcher.sh

cat > piwatcher.service << EOL
[Unit]
Description=PiWatcher Service
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=pi
ExecStart=/home/dgorissen/piwatcher.sh

[Install]
WantedBy=multi-user.target
EOL

sudo mv piwatcher.service /etc/systemd/system/

sudo systemctl enable piwatcher
sudo systemctl start piwatcher

# enable 4inch hdmi monitor (https://www.waveshare.com/wiki/4inch_HDMI_LCD)
sudo apt-get install xinput-calibrator 

git clone https://github.com/waveshare/LCD-show.git
cd LCD-show/
chmod +x LCD4-800x480-show
./LCD4-800x480-show

# Setup realsense (https://github.com/acrobotic/Ai_Demos_RPi/wiki/Raspberry-Pi-4-and-Intel-RealSense-D435)
cd ~
git clone https://github.com/IntelRealSense/librealsense.git
cd librealsense
sudo cp config/99-realsense-libusb.rules /etc/udev/rules.d/
sudo su
udevadm control --reload-rules && udevadm trigger
exit

# Sound commands

# list devices:
aplay -l
# Record from respeaker
arecord -D plughw:3,0 -f cd a.wav
# Play through device
aplay --device plughw:2,0 a.wav

# install respeaker rules so we can access without being root
$ more 60-respeaker.rules
SUBSYSTEM=="usb", ATTR{idProduct}=="0018", ATTR{idVendor}=="2886", MODE:="0666"
sudo systemctl restart udev

# Also ensure the realsense and neural compute stick udev rules are installed

# Test neural compute stick
~/openvino/build_samples/armv7l/Release/object_detection_sample_ssd -m /home/dgorissen/open_model_zoo/tools/downloader/intel/face-detection-adas-0001/FP16/face-detection-adas-0001.xml -d MYRIAD -i ~/clare/school.jpg

# Teensy udev rules
# https://www.pjrc.com/teensy/loader_linux.html
wget -O /etc/udev/rules.d/00-teensy.rules https://www.pjrc.com/teensy/00-teensy.rules

# Platform IO udev rules
# https://docs.platformio.org/en/latest//faq.html#platformio-udev-rules
curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/master/scripts/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules

# Note:
# if docker img does not build on the pi because of key problems with apt, see
# https://askubuntu.com/questions/1263284/apt-update-throws-signature-error-in-ubuntu-20-04-container-on-arm


# install ros (assuming no pkgs for raspi)
https://wiki.ros.org/noetic/Installation/Source


